version: "3.8"  # Asegúrate de usar la versión correcta

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: reservations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"  # Mapeo del puerto de PostgreSQL
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI port
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  reservation-service:
    build:
      context: .
      target: reservation-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/reservations
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_JPA_HIBERNATE_DDL-AUTO: create-drop
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  processing-service:
    build:
      context: .
      target: processing-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/reservations
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_JPA_HIBERNATE_DDL-AUTO: create-drop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  db-init:
    image: postgres:17
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_DB: reservations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - app-network
    command: >
      sh -c "sleep 15 && PGPASSWORD=postgres psql -h postgres -U postgres -d reservations -f /scripts/init.sql"
    volumes:
      - ./init.sql:/scripts/init.sql

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge